[tool.briefcase]
project_name = "Testbed"
bundle = "org.beeware"
version = "0.0.1"
url = "https://beeware.org"
license = "BSD license"
author = 'Russell Keith-Magee'
author_email = "russell@beeware.org"

[tool.briefcase.app.testbed]
formal_name = "Testbed"
description = "A testbed for the Apple Support packages."
long_description = """A test of common use cases and known problems with bundled apps.

Validates 3rd party module loading, as well as basic app packaging.
"""
icon = "src/testbed/resources/testbed"
sources = ["src/testbed"]
test_sources = ["tests"]

requires = [
    "cryptography",
    "lru_dict",
    "pillow",
    "numpy",
    "pandas",
]
test_requires = [
    "pytest",
]

[tool.briefcase.app.testbed.macOS]
requires = [
    "rubicon-objc",
    "std-nslog",
]
# support_package = "../Python-Apple-support/dist/Python-3.8-macOS-support.custom.tar.gz"

[tool.briefcase.app.testbed.macOS.app]
# template = "../../templates/briefcase-macOS-app-template"

[tool.briefcase.app.testbed.macOS.Xcode]
# template = "../../templates/briefcase-macOS-Xcode-template"

[tool.briefcase.app.testbed.linux]
requires=[
    'pycairo',
    'pygobject',
]

[tool.briefcase.app.testbed.linux.system.debian]
system_requires = [
    # Needed to compile pycairo wheel
    "libcairo2-dev",
    # Needed to compile PyGObject wheel
    "libgirepository1.0-dev",
]

system_runtime_requires = [
    # Needed to provide GTK and its GI bindings
    "gir1.2-gtk-3.0",
    "libgirepository-1.0-1",
    # Dependencies that GTK looks for at runtime
    "libcanberra-gtk3-module",
]

[tool.briefcase.app.testbed.linux.appimage]
manylinux = "manylinux_2_28"
requires = [
    '--no-binary', ':all:',
]

system_requires = [
    # Needed to compile pycairo wheel
    "cairo-gobject-devel",
    # Needed to compile PyGObject wheel
    "gobject-introspection-devel",
    # Needed to provide GTK
    "gtk3-devel",
    # Dependencies that GTK looks for at runtime, that need to be
    # in the build environment to be picked up by linuxdeploy
    "libcanberra-gtk3",
    "PackageKit-gtk3-module",
    "gvfs-client",
    # Needed to compile Pillow
    "libjpeg-devel",
    # Needed to compile Cryptography
    "openssl-devel",
]

linuxdeploy_plugins = [
    'DEPLOY_GTK_VERSION=3 gtk',
]

dockerfile_extra_content = """
# Install Rust (required for cryptography)
RUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
# Set up compilers (required for numpy)
ENV CXX="g++ -pthread"
ENV AR=ar
# Add a symlink for python->python3 (needed for pandas)
# Pandas *requires* that the Python binary be called `python`, not `python3`.
# However, Python-standalone *only* provides `python3`, and at runtime, we
# only need `python3`. We can't (easily) reconfigure the Meson build for Pandas,
# so we put a symlink in `brutus`'s bin path.
RUN mkdir -p /home/brutus/bin
RUN ln -si /app/Testbed.AppDir/usr/python/bin/python3 /home/brutus/bin/python
# Set the path to include all the things we've installed.
ENV PATH="/home/brutus/bin:/home/brutus/.cargo/bin:${PATH}"
"""

# support_package = "../Python-linux-support/dist/Python-3.10-linux-x86_64-support.custom.tar.gz"
# template = "../../templates/briefcase-linux-appimage-template"

[tool.briefcase.app.testbed.linux.flatpak]
flatpak_runtime = "org.gnome.Platform"
flatpak_runtime_version = "44"
flatpak_sdk = "org.gnome.Sdk"

# template = "../../templates/briefcase-linux-flatpak-template"

[tool.briefcase.app.testbed.windows]
requires = [
    "pythonnet>=3.0.0rc6",
    # Windows doesn't provide the zoneinfo TZ database; use the Python provided one
    "tzdata",
]

[tool.briefcase.app.testbed.windows.app]
# template = "../../templates/briefcase-windows-app-template"

[tool.briefcase.app.testbed.windows.VisualStudio]
# template = "../../templates/briefcase-windows-VisualStudio-template"

# Mobile deployments
[tool.briefcase.app.testbed.iOS]
requires = [
    "rubicon-objc",
    "std-nslog",
]
# support_package = "../Python-Apple-support/dist/Python-3.8-iOS-support.custom.tar.gz"
# template = "../../templates/briefcase-iOS-Xcode-template"

[tool.briefcase.app.testbed.android]
requires = [
    "rubicon-java",
    # Android doesn't provide the zoneinfo TZ database; use the Python provided one
    "tzdata",
]

# support_package = "../Python-Android-support/dist/Python-3.10-Android-support.custom.zip"
# template = "../../templates/briefcase-Android-gradle-template"

[tool.isort]
profile = "black"
split_on_trailing_comma = true
combine_as_imports = true
